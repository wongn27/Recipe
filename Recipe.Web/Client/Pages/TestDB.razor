@page "/TestDB"
@inject HttpClient client
@inject IJSRuntime js
@inject NavigationManager uriHelper
@using Recipe.Web.Data.Models


<h3>TestDB</h3>

<h3>Create</h3>
<div class="form-group">
    <a class="btn btn-success" href="/create"><i class="oi oi-plus"></i> Create New</a>
</div>
<br>
@if (users == null)
{
    <text>Loading...</text>
}
else if (users.Length == 0)
{
    <text>Empty Fridge!</text>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>AllTheOnions</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (User ing in users)
            {
            <tr>
                <td>@ing.Email</td>
                <td>@ing.FirstName</td>
                <td>@ing.Id</td>
                <td>
                    <a class="btn btn-success" href="developer/edit/@ing.Id">Edit</a>
                    @*<button class="btn btn-danger" @onclick="@(() => Delete(ing.Id))">Delete</button>*@
                </td>
            </tr>
            }
        </tbody>
    </table>
    
    @*<p>@list[0]</p>*@

}

@code {


    Ingredient addIngredient = new Ingredient();

    Ingredient[] ingredients { get; set; }
    User[] users { get; set; }

    List<Guid> list = new List<Guid>();

    protected override async Task OnInitializedAsync()
    {
        //  ingredients = await client.GetFromJsonAsync<Ingredient[]>("api/ingredientController");
        users = await client.GetFromJsonAsync<User[]>("api/userController");

        //var numbers2 = from u in ingredients
        //               where u.Name == "Taco"
        //               select u.Id;

        //list = numbers2.ToList();

    }
}
