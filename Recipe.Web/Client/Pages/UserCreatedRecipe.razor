@page "/userRecipe"
@using Recipe.Web.Data.Models
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject HttpClient Http

@if (userPost == null)
{
    <!--Pancake flip loading screen for a little *RAZZLE DAZZLE* NOTE: Need this "if null" check or info won't render async task- RT -->
    <img src="/images/Making-pancake-loader.gif" width="300" height="300" />
}
else
{
    <h3>@userPost.Name</h3> <p>Date Added: TBD</p>


    <p>Cooking Time: @userPost.CookingTime</p>
    <img src="/android-chrome-512x512.png" width="300" height="300" />
    <p>Calories: @userPost.CalorieCount</p>

    <br/>
    <font size="4" face="arial" color="purple">
        <strong>Ingredients</strong>
    </font>
    <p>@((MarkupString)userPost.Description)</p>
    for (int i = 0; i < recipeIngredientList.Count; i++)
    {
        <li>@recipeIngredientList[i]</li>
    }
    <br/>
    <font size="4" face="arial" color="purple">
        <strong>Steps</strong>
    </font>
    for (int i = 0; i < recipeStepList.Count; i++)
    {
        <li>@recipeStepList[i]</li>
    }
    <br />

    <body>

        <div style="display: table" width="100%" margin: 0 auto>
            <div style="display: table-row">
                <div style="display: table-cell">
                    <ul class="ingredientList" float:left>
                    </ul>
                </div>
                <div style="display: table-cell">
                    <ol class="steps" float:right>
                    </ol>
                </div>
            </div>
        </div>
        <br />
    </body>
    <br />
    <br />
    <div text-align:center>

        <br /> <br />
        <input type="button" value="Print/Save Recipe" onClick="window.print()">
    </div>
    <a href="@fblink" target="_blank">
        <img src="https://simplesharebuttons.com/images/somacro/facebook.png" alt="Facebook" />
    </a>
    <a href="@twlink" target="_blank">
        <img src="https://simplesharebuttons.com/images/somacro/twitter.png" alt="Twitter" />
    </a>
    <a href="@rdlink" target="_blank">
        <img src="https://simplesharebuttons.com/images/somacro/reddit.png" alt="Reddit" />
    </a>
}


@code {

    UserRecipePost userPost { get; set; }
    Guid userRecipePostId { get; set; }
    UserRecipePost[] resultsFromUserRecipe { get; set; }
    bool ingrdientListSwitch = false;
    private string fblink, twlink, rdlink, currentUrl;

    List<string> recipeStepList = new List<string>();
    List<string> recipeIngredientList = new List<string>();
    string recpeStepString { get; set; }

    protected override async Task OnInitializedAsync()
    {
        userRecipePostId = await sessionStorage.GetItemAsync<Guid>("createdUserRecipeID");
        resultsFromUserRecipe = await Http.GetFromJsonAsync<UserRecipePost[]>("api/userRecipeController");

        var test = userPost;
        var t = test;

        foreach (var recipe in resultsFromUserRecipe)
        {
            if (recipe.Id == userRecipePostId)
            {
                userPost = recipe;
                recpeStepString = recipe.Steps;
            }
        }

        try
        {
            stringCleaner(recpeStepString, recipeStepList);
            stringCleaner(recpeStepString, recipeIngredientList);
        }
        catch
        {

        }
    }

    //Cleaning String - RT
    public void stringCleaner(string uncleanString, List<string> stringList)
    {

        string totalWord = "";

        foreach (char c in uncleanString)
        {
            if (c != ';')
            {
                totalWord += c.ToString();
            }
            else
            {
                stringList.Add(totalWord);
                totalWord = "";
            }
        }

        stringList.Add(totalWord);

        ingrdientListSwitch = true;
    }

}
