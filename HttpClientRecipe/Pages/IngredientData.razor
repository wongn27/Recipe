@page "/Ingredient"
@inject IHttpClientFactory _clientFactory

<h3>Ingredient Search</h3>

@if (string.IsNullOrWhiteSpace(errorString) == false)
{
    <div> class="h2">@errorString</div>
}
else if (IL is null)
{
    <div class="h4">Loading...</div>
}
else
{
    <table class="table table-striped">
        <thead class="thead-dark">
            <tr>
                <th>Id</th>
                <th>Name</th>
            </tr>
        </thead>
        <tbody>
          <!-- @foreach (var w in IL)
            {
             <tr>
                <td>@w.id</td>
                <td>@w.name</td>
                <td>@w.aisle</td>
             </tr>
            }-->
        </tbody>
    </table>

    }

    @code {

        Ingredient ingredient = new Ingredient();
        IngredientList IL = new IngredientList();
        IngredientList test;
        string errorString;


        protected override async Task OnInitializedAsync()
        {


            var request = new HttpRequestMessage(HttpMethod.Get,
            "https://api.spoonacular.com/food/ingredients/autocomplete?query=appl&number=2&metaInformation=true&apiKey=d36cb53813e341069b3c81d6d3b61c31");


            //ClientFactory will make sure clients are closed and not overdrive sockets
            var client = _clientFactory.CreateClient();

            HttpResponseMessage response = await client.SendAsync(request).ConfigureAwait(false);

            if (response.IsSuccessStatusCode)
            {

                errorString = null;


                //Reading API as a string of json - RT
                var jsonString = await response.Content.ReadAsStringAsync();

                //Creating list from that json string - RT
                var root =  Newtonsoft.Json.JsonConvert.DeserializeObject<List<Ingredient>>(jsonString);

                IL.Ingredients = Newtonsoft.Json.JsonConvert.DeserializeObject<List<Ingredient>>(jsonString);  //root;


                if (root != null)
                {
                    Console.WriteLine(IL.Ingredients[0].name);
                    
                }
                else
                {

                }

            }
            else
            {
                errorString = $"There was an error getting data: {response.ReasonPhrase}";
            }

        }
}
    